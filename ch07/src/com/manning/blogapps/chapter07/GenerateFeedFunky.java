package com.manning.blogapps.chapter07;

import com.sun.syndication.feed.module.content.ContentModule;
import com.sun.syndication.feed.module.content.ContentModuleImpl;
import com.sun.syndication.feed.rss.Channel;
import com.sun.syndication.feed.rss.Description;
import com.sun.syndication.feed.rss.Item;
import com.sun.syndication.io.WireFeedOutput;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

/**
 * Simple example that shows how to generate a feed.
 */
public class GenerateFeedFunky {

	public static void main(String[] args) throws Exception {
        if (args.length < 1) {
            System.out.println("USAGE: GenerateRSS <feed-type>");
            return;
        }
        Channel channel = new Channel();  
        channel.setFeedType(args[0]);
        channel.setLanguage("en-us");                
        channel.setTitle("Example feed");         
        channel.setDescription("Example feed generated by ROME");  
        channel.setLink("http://example.com/feeds/blog1");                                           
        channel.setPubDate(new Date()); 
                   
        List items = new ArrayList();
        
        Item item1 = new Item();
        item1.setTitle("Entry1");
        item1.setLink("http://example.com/blog/entry1.html");
        item1.setPubDate(new Date());   
        item1.setAuthor("nina@example.com");
        
        Description desc = new Description();
        desc.setValue("Summary for test entry #1");
        item1.setDescription(desc); 
        
        ContentModule cm = new ContentModuleImpl(); 
        List encodeds = new ArrayList();
        encodeds.add("Content for test entry #1");
        cm.setEncodeds(encodeds);
        item1.getModules().add(cm);
        
        items.add(item1); 
        
        channel.setItems(items);  
        
        WireFeedOutput out = new WireFeedOutput();
        out.output(channel, new PrintWriter(System.out));
    }
	
}
